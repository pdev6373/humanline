"use client";
import type { Metadata } from "next";
import { Manrope } from "next/font/google";
import { useEffect, useState } from "react";
import { LayoutType } from "@/types";
import { usePathname } from "next/navigation";
import { NavConstant } from "@/constants";
import { Header, SectionHeader, Sidebar, Wrapper } from "@/components";
import styles from "./layout.module.css";
import "../globals.css";

const manrope = Manrope({
  weight: ["400", "500", "600", "700"],
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

type PageHeaderType = {
  title: string;
  description: string;
  currentRouteName: string;
  homeRoute: string;
};

export default function RootLayout({ children }: LayoutType) {
  const pathname = usePathname();
  const [pageHeader, setPageHeader] = useState<PageHeaderType>(
    pageHeaderHandler()
  );

  useEffect(() => {
    setPageHeader(pageHeaderHandler());
  }, [pathname, pageHeaderHandler]);

  function pageHeaderHandler(): PageHeaderType {
    const currentNav = NavConstant.find((nav) => pathname === nav.route);

    if (currentNav)
      return {
        title: currentNav.name,
        currentRouteName: currentNav.name,
        description: currentNav.description,
        homeRoute: currentNav.route,
      };

    const currentNavParent = NavConstant.find((nav) =>
      pathname.includes(nav.route)
    )!;
    const currentSubNav = currentNavParent.subRoutes.find(
      (subNav) => pathname === subNav.route
    )!;

    return {
      title: currentNavParent.name,
      currentRouteName: currentSubNav?.name,
      description: currentSubNav?.name,
      homeRoute: currentNavParent.route,
    };
  }

  return (
    <html lang="en">
      <body className={manrope.className}>
        <div className={styles.wrapper}>
          <Sidebar />
          <div className={styles.content}>
            <div className={styles.header}>
              <Header />
            </div>

            <Wrapper padding={24} paddingBlock={32} gap={32}>
              <>
                <SectionHeader
                  title={pageHeader.title}
                  currentRouteName={pageHeader.currentRouteName}
                  description={pageHeader.description}
                  homeRoute={pageHeader.homeRoute}
                />

                {children}
              </>
            </Wrapper>
          </div>
        </div>
      </body>
    </html>
  );
}
